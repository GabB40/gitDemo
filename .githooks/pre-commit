#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".
MSG_FILE=$1
FILE_CONTENT="(cat $MSG_GILE)"
BRANCH=$(git rev-parse --abbrev-ref HEAD)
REGEX="(feature|refacto|fix)/PI[0-9]+\-IT[1-5]_[A-Z]{3,}_(S|R|F)\-[0-9]{6}_.{3,}"

# empêcher les commit sur master, main et develop
# if [[ $BRANCH =~ master|main|develop ]]; then
#     echo "commits on the $BRANCH branch are forbidden"
#     exit 1
# fi

# ENLEVER CONDITION SUR "master"
if [[ $BRANCH != "master" ]] && ! [[ $BRANCH =~ $REGEX ]]; then
  echo "INVALID BRANCH NAME"
  echo ""
  echo "Your branch name does not respect the defined pattern. Example of a valid branch name:"
  echo ""
  echo "feature/PI31-IT4_OLDELPASO_S-878037_[Expose_Cinvalidities]_Get_all_Cinvalidities_for_a_simulation"
  exit 1
fi

# formattage du code (nécessite l'install de black : ``$pip install black`)
#black .
